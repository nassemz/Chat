/*
 * ClientChat.java
 *
 * Created on January 12, 2007, 8:04 PM
 */

package clientchat;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.text.DateFormat;
import java.util.Date;
import java.util.Hashtable;
import javax.swing.JFileChooser;
import messages.ServerMessages;
import sun.audio.*;


public class ClientChat extends javax.swing.JFrame {
    
    private ObjectInputStream input;    //input for input data from the server
    private ObjectOutputStream output;  //output for output data from the server
    private String UserName;            //the client User name
    private DesEncrypter encrypter;     //the encrypt class for encryption and decryption incomming and outcomming data
    private Hashtable OpenChatRooms;    //a refernce for all the open chat rooms
    private JFileChooser fc;
    
    public ClientChat(String User,ObjectInputStream input_t,ObjectOutputStream output_t,String user
            ,DesEncrypter encrypt,Hashtable OpenChatRooms_t) {
        super(User);
        OpenChatRooms = OpenChatRooms_t;
        input = input_t;
        fc = new JFileChooser();
        output = output_t;
        UserName = user;
        encrypter = encrypt;
        Image im = Toolkit.getDefaultToolkit().getImage("C:\\VwV\\icons\\chat.png");
        setIconImage(im);
        initComponents();
        setLocationRelativeTo(null); //Display the window center it.
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ChatWindowtext = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        SendButt = new javax.swing.JButton();
        SendFileButt = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        WriteWindowtext = new javax.swing.JTextArea();
        CloseWindowButt = new javax.swing.JButton();
        DisableSound = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12)));
        ChatWindowtext.setColumns(20);
        ChatWindowtext.setEditable(false);
        ChatWindowtext.setRows(5);
        jScrollPane1.setViewportView(ChatWindowtext);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 474, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12)));
        SendButt.setText("Send");
        SendButt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SendButtMouseClicked(evt);
            }
        });

        SendFileButt.setText("Send File");
        SendFileButt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SendFileButtMouseClicked(evt);
            }
        });

        WriteWindowtext.setColumns(20);
        WriteWindowtext.setRows(5);
        WriteWindowtext.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                WriteWindowtextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                WriteWindowtextKeyReleased(evt);
            }
        });

        jScrollPane2.setViewportView(WriteWindowtext);

        CloseWindowButt.setText("Close Window");
        CloseWindowButt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                CloseWindowButtMouseReleased(evt);
            }
        });

        DisableSound.setText("Disable Sound");
        DisableSound.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        DisableSound.setMargin(new java.awt.Insets(0, 0, 0, 0));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 367, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(SendButt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)
                            .addComponent(SendFileButt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                            .addComponent(CloseWindowButt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(DisableSound))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(DisableSound)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(SendButt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SendFileButt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CloseWindowButt)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void WriteWindowtextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_WriteWindowtextKeyReleased
        
        int code = evt.getKeyCode();
        
        if(code == KeyEvent.VK_ESCAPE){
//Key pressed is the Escape key. Hide this Dialog.
            CloseWindow();
        } else if(code == KeyEvent.VK_ENTER){
//Key pressed is the Enter key. SendChatMessage
            SendChatMessage();
            WriteWindowtext.setText("");
        }
    }//GEN-LAST:event_WriteWindowtextKeyReleased
    
    private void WriteWindowtextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_WriteWindowtextKeyPressed
        if(!DisableSound.isSelected())
            PlaySound("C:\\VwV\\sounds\\MsgType.wav");
    }//GEN-LAST:event_WriteWindowtextKeyPressed
    
    private void CloseWindowButtMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CloseWindowButtMouseReleased
// TODO add your handling code here:
        CloseWindow();
    }//GEN-LAST:event_CloseWindowButtMouseReleased
    
    private void SendFileButtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SendFileButtMouseClicked
        String Reciver = this.getTitle();
        
        int length = ServerMessages.DefultMaxIndex-Reciver.length(); //get number of spaces have to add after the user name
        if (length < 0) //if the user name more than the DefultMaxIndex then return
            return;
        for(int i=length ; i!=0 ; i--) //fill the new Name with spaces like : "nassem_z@hotmail.com         ...-> until DefultMaxIndex"
            Reciver = Reciver + " ";
        Date now = new Date();
        
        Reciver = Reciver + ServerMessages.SEND_FILE;
        try {
            sendData(Reciver); // then Write it to the user;
        } catch (IOException ex) {
            ex.printStackTrace();
        } // then Write it to the user;
        
    }//GEN-LAST:event_SendFileButtMouseClicked
    
    private void SendButtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SendButtMouseClicked
// TODO add your handling code here:
        SendChatMessage();
    }//GEN-LAST:event_SendButtMouseClicked
    
    private String ParseOut(String Data) {
        String Temp = "";
        int index = 0;
        int i;
        for (i = 0 ; i< Data.length() ; i++)
            if( (Data.substring(i,i+1).equals("\n")) && (i < Data.length()-1)) {
            Temp = Temp + Data.substring(index,i) + ServerMessages.DEFAULTSLPITER;
            index = i+1;
            }
        return Temp + Data.substring(index,i);
    }
    
    private String ParseIn(String Data) {
        String Temp = "";
        String [] temp = null;
        temp = Data.split(ServerMessages.DEFAULTSLPITER);
        for (int i = 0 ; i < temp.length ; i++)
            Temp = Temp + temp[i] + "\n";
        return Temp;
    }
    
    private void PlaySound(String soundpath){
        try{
// AudioPlayer instantiated to force run of static initializers.
            AudioPlayer audioPlayer = AudioPlayer.player;
            AudioDataStream audioDataStream;
            ContinuousAudioDataStream continuousAudioDataStream;
            // Applet role
            FileInputStream fis = new FileInputStream( new File( soundpath) );
            AudioStream as = new AudioStream( fis ); // header plus audio data
            AudioData ad = as.getData(); // audio data only, no header
            audioDataStream = new AudioDataStream( ad );
            //continuousAudioDataStream = new ContinuousAudioDataStream( ad );
            audioPlayer.start( audioDataStream );
            
        }catch(Exception e){}
    }
  
    public void GetMsg(String Data,String SenderName){
        // recive a msg and parse it and put the msg into the jTextArea1
        String Temp = ParseIn(Data);
        Date now = new Date();
        ChatWindowtext.append(SenderName + " [" + DateFormat.getTimeInstance().format(now) + "] Says:\n <===  " + Temp);// + "\n");
        ChatWindowtext.setCaretPosition(ChatWindowtext.getDocument().getLength());
    }
    
    private void CloseWindow() {
        try{
            OpenChatRooms.remove(this.getTitle());
        }catch(Exception ex) {
        }
        this.dispose();
    }
    
    private void SendChatMessage(){
        String Sender = this.getTitle();
        String Data = new String(WriteWindowtext.getText());
        if (Data.substring(Data.length()-1).equals("\n"))
            Data = Data.substring(0,Data.length()-1);
        if (Data.equals(""))
            return;
        int length = ServerMessages.DefultMaxIndex-Sender.length(); //get number of spaces have to add after the user name
        if (length < 0) //if the user name more than the DefultMaxIndex then return
            return;
        for(int i=length ; i!=0 ; i--) //fill the new Name with spaces like : "nassem_z@hotmail.com         ...-> until DefultMaxIndex"
            Sender = Sender + " ";
        Date now = new Date();
        //jTextArea1.setFont(new Font("SansSerif", Font.PLAIN, 14));
        //jTextArea1.setFont();
        ChatWindowtext.append(UserName + " [" + DateFormat.getTimeInstance().format(now) + "] Says:\n ===>  " + Data + "\n");
        Data = ParseOut(Data);
        Sender = Sender + Data;
        try {
            sendData(Sender); // then Write it to the user;
        } catch (IOException ex) {
            ex.printStackTrace();
        } // then Write it to the user;
        WriteWindowtext.setText("");
        if(!DisableSound.isSelected())
            PlaySound("C:\\VwV\\sounds\\Sent.wav");
        
    }
    
    public void sendData(String str) throws IOException {
        /*******************************************************************
         * The sendData() method in the client sends data to the server
         ***************************************************************** */
        output.writeObject(encrypter.encrypt(str));//sending to the user a string as object
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea ChatWindowtext;
    private javax.swing.JButton CloseWindowButt;
    private javax.swing.JCheckBox DisableSound;
    private javax.swing.JButton SendButt;
    private javax.swing.JButton SendFileButt;
    private javax.swing.JTextArea WriteWindowtext;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
    
}
